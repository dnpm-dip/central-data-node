name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  packages: write
  contents: write
  pull-requests: write
  issues: write

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      #      - uses: googleapis/release-please-action@v4
      #        id: release
      #        with:
      #          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        #        if: steps.release.outputs.releases_created == 'true'
        uses: actions/checkout@v4

      - name: Setup JDK
        #        if: steps.release.outputs.releases_created == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Setup sbt launcher
        #        if: steps.release.outputs.releases_created == 'true'
        uses: sbt/setup-sbt@v1

      - name: Assembly
        #        if: steps.release.outputs.releases_created == 'true'
        env:
          REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.release.outputs['major'] }}.${{ steps.release.outputs['minor'] }}.${{ steps.release.outputs['patch'] }}
        run: sbt assembly

      - name: Build and release Docker image
        #        if: steps.release.outputs.releases_created == 'true'
        uses: tada5hi/action-docker-image-publish@v3
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
             #           VERSION: ${{ steps.release.outputs['major'] }}.${{ steps.release.outputs['minor'] }}.${{ steps.release.outputs['patch'] }}
        with:
          #          buildArgs: |
          #            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          #            VERSION=${{ env.VERSION }}
          registryTag: |
            latest
            #            ${{ env.VERSION }}
